//
//  SBDFileMessage.h
//  SendBird
//
//  Created by Jed Gyeong on 6/28/17.
//  Copyright Â© 2017 SendBird. All rights reserved.
//

#ifndef SENDBIRD_SBDFILEMESSAGE_H_
#define SENDBIRD_SBDFILEMESSAGE_H_

#include <iostream>
#include <vector>
#include <map>

#include "SBDBaseMessage.h"
#include "SBDBaseChannel.h"

using namespace std;

class SBDBaseChannel;

class SBDThumbnailSize {
public:
	SBDThumbnailSize(int64_t max_width, int64_t max_height);

	int64_t max_width;
	int64_t max_height;
};

class SBDThumbnail {
public:
	SBDThumbnail(int64_t max_width, int64_t max_height, int64_t real_width, int64_t real_height, wstring url, bool require_auth);

	/**
	 *  Gets thumbnail's url.
	 */
	wstring GetUrl();

	int64_t max_width;
	int64_t max_height;
	int64_t real_width;
	int64_t real_height;

	/**
	 *  Internal use only.
	 */
    wstring url;

	/**
	 *  Internal use only.
	 */
	bool require_auth;
};

/**
 *  The `SBDFileMessage` class represents the file message which is generated by a user via [`SendFileMessage()`]() in `SBDBaseChannel` or [Platform API](https://docs.sendbird.com/platform#messages_3_send). This class doesn't include a binary <span>data</span> for the file. It is just a URL.
 */
class SBDFileMessage : public SBDBaseMessage {
public:
	/**
	 *  The message sender.
	 */
	SBDUser sender;

    /**
     *  The file URL.
     */
    wstring url;
    
    /**
     *  The name of file.
     */
    wstring name;
    
    /**
     *  The size of file.
     */
    uint64_t size;
    
    /**
     *  The type of file.
     */
    wstring type;
    
    /**
     *  The custom data for file.
     */
    wstring data;
    
    /**
     *  Request ID for ACK.
     */
    wstring request_id;
    
    /**
     *  Custom message type.
     */
    wstring custom_type;
    
    /**
     *  Image thumbnails.
     */
    vector<SBDThumbnail> thumbnails;
    
    /**
     *  Returns sender of the <span>message</span>.
     */
    SBDUser GetSender();
    
    /**
     *  Internal use only.
     */
    void SetSender(SBDUser sender);

	/**
	 *  Internal use only.
	 */
	SBDFileMessage(string dict);

	/**
	 *  Internal use only.
	 */
	~SBDFileMessage() {};

	/**
	 *  Internal use only.
	 */
	bool require_auth;
    
	/**
	 *  Internal use only.
	 */
	void Overwrite(SBDFileMessage *message);
};

#endif /* SENDBIRD_SBDFILEMESSAGE_H_ */
